export const result = {
  "code": "/* @jsxImportSource @revideo/2d/lib */\nimport { makeScene2D, Txt, Rect, Img, Video, Layout, Audio, Node, blur } from \"@revideo/2d\";\nimport { all, waitFor, createRef, useScene, sequence, chain, delay, Reference, easeOutCubic, easeOutExpo } from \"@revideo/core\";\n\nconst assets = {\n  logoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fimage%2F01JR8AWWC9M3Y4T7DRGSQFF14E-mixio-pro-logo-removebg-preview.png', // Asset #6\n  landingPageVideoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fvideo%2F01JV2Q3VMSGQF3PNR4HXRHVK9S-landing-page-showcase.mp4', // Asset #0\n  imageGenVideoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fvideo%2F01JTW68GXE4XCSK50YQVGGHTY9-image-generation-demo.mp4', // Asset #2\n  plannerVideoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fvideo%2F01JTW62DJ61W264ZPDFNW8HVFA-planner-result.mp4', // Asset #4\n  videoGenVideoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fvideo%2F01JTW620Q507XTB3P74ZJ9Z581-image-video-generation-outputs.mp4', // Asset #5\n  revideoDemoAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Fvideo%2F01JTW634W3CPPE1WPN5FN8WY79-revideo-demo.mp4', // Asset #3\n  backgroundMusicAsset: 'https://reel-ai-assets.s3.us-west-2.amazonaws.com/29a02986-d1be-40a9-849f-94a9a70072ff%2Faudio%2F01JTW70TCQHP7VRK2V3GRVE7QQ-dark-mystery-trailer-taking-our-time-131566.mp3', // Asset #1\n};\n\nfunction useTheme() {\n  const scene = useScene();\n  const size = scene.getSize();\n  const width = size.width;\n  const height = size.height;\n  const unit = width / 100;\n\n  const font = {\n    base: unit * 3,\n    md: unit * 4,\n    lg: unit * 5,\n    xl: unit * 7,\n  };\n\n  const colors = {\n    white: '#ffffff',\n    black: '#000000',\n    primary: '#007bff',\n    textDark: '#1a1a1a', \n    textLight: '#f8f9fa', \n    sectionBgOverlay: 'rgba(26, 26, 26, 0.85)', \n    captionBackground: 'rgba(0,0,0,0.5)',\n  };\n\n  const animation = {\n    fast: 0.3,\n    medium: 0.5,\n    slow: 0.7,\n    defaultFade: 0.5,\n    defaultSlide: 0.7,\n    defaultScale: 0.8,\n  };\n  \n  const zIndex = {\n    background: -10,\n    video: 0,\n    captionBg: 5,\n    captionText: 10, \n    sectionText: 15,\n    logo: 20,\n    contentDefault: 5, \n    overlay: 100,\n  };\n\n  return { width, height, unit, font, colors, animation, zIndex };\n}\n\nfunction* slideIn(\n  elementRef: Reference<Txt | Layout | Rect>, \n  duration: number,\n  direction: 'bottom' | 'top' | 'left' | 'right',\n  theme: ReturnType<typeof useTheme>,\n  distanceMultiplier: number = 0.15,\n) {\n  const initialPos = { x: elementRef().position.x(), y: elementRef().position.y() };\n  const slideDistance = direction === 'bottom' || direction === 'top' ? theme.height * distanceMultiplier : theme.width * distanceMultiplier;\n\n  if (direction === 'bottom') elementRef().position.y(initialPos.y + slideDistance);\n  else if (direction === 'top') elementRef().position.y(initialPos.y - slideDistance);\n  else if (direction === 'left') elementRef().position.x(initialPos.x - slideDistance);\n  else if (direction === 'right') elementRef().position.x(initialPos.x + slideDistance);\n  \n  elementRef().opacity(0);\n\n  yield* all(\n    elementRef().opacity(1, duration, easeOutCubic),\n    (direction === 'bottom' || direction === 'top')\n      ? elementRef().position.y(initialPos.y, duration, easeOutCubic)\n      : elementRef().position.x(initialPos.x, duration, easeOutCubic)\n  );\n}\n\nexport default makeScene2D(\"MixioProDemo\", function* (view) {\n  const theme = useTheme();\n\n  // Refs for elements\n  const blurredLogoBgRef = createRef<Img>(); \n  \n  const logoIntroRef = createRef<Img>(); \n  const titleIntroRef = createRef<Txt>(); \n\n  const landingPageTitleTextRef = createRef<Txt>();\n  const landingPageVideoRef = createRef<Video>(); \n  const landingPageCaptionTextRef = createRef<Rect>(); \n\n  const imageGenTitleTextRef = createRef<Txt>(); \n  const imageGenVideoRef = createRef<Video>(); // Combined video ref\n  const imageGenCaptionTextRef = createRef<Rect>(); // Combined caption ref\n\n  const plannerTitleTextRef = createRef<Txt>(); \n  const plannerVideoRef = createRef<Video>(); \n  const plannerCaptionTextRef = createRef<Rect>(); \n\n  const videoGenTitleTextRef = createRef<Txt>(); \n  const videoGenVideoRef = createRef<Video>(); \n  const revideoDemoRef = createRef<Video>(); \n  const videoGenCaptionTextRef = createRef<Rect>(); \n  \n  const logoOutroRef = createRef<Img>(); \n  const textOutroRef = createRef<Txt>(); \n\n  const backgroundMusicRef = createRef<Audio>(); \n\n  // --- Global Elements Setup ---\n  view.add(\n    <Img \n      ref={blurredLogoBgRef} \n      src={assets.logoAsset} \n      width={theme.width}\n      height={theme.height}\n      opacity={0} \n      zIndex={theme.zIndex.background}\n      filters={[blur(10)]} \n      alpha={0.3} \n    />\n  );\n  \n  view.add( \n    <Audio ref={backgroundMusicRef} src={assets.backgroundMusicAsset} play={true} loop={true} />\n  );\n\n  // --- Scene 1: Intro (0s - 7s) ---\n  view.add(\n    <Img\n      ref={logoIntroRef}\n      src={assets.logoAsset} \n      width={theme.unit * 25}\n      opacity={0}\n      zIndex={theme.zIndex.logo}\n      position={[0, -theme.unit * 5]}\n    />\n  );\n  view.add(\n    <Txt\n      ref={titleIntroRef}\n      text=\"Mixio Pro\"\n      fontSize={theme.font.xl}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      scale={0.5}\n      zIndex={theme.zIndex.contentDefault}\n      position={[0, theme.unit * 10]}\n      textAlign=\"center\"\n    />\n  );\n\n  yield* blurredLogoBgRef().opacity(1, 1); \n  yield* all(\n    logoIntroRef().opacity(1, 1), \n    titleIntroRef().opacity(1, 1.2), \n    titleIntroRef().scale(1, 1.2, easeOutExpo) \n  );\n  yield* waitFor(7 - 1.2); \n\n  yield* all(\n    logoIntroRef().opacity(0, theme.animation.defaultFade),\n    titleIntroRef().opacity(0, theme.animation.defaultFade)\n  );\n  // Total time: 7s\n\n  // --- Scene 2: Landing Page Section (7s - 9s) ---\n  view.add(\n    <Txt\n      ref={landingPageTitleTextRef}\n      text=\"Landing Page Showcase\"\n      fontSize={theme.font.lg}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      zIndex={theme.zIndex.sectionText}\n      textAlign=\"center\"\n      position={[0,0]} \n    />\n  );\n  yield* landingPageTitleTextRef().opacity(1, 0.8); \n  yield* waitFor(1.2 - 0.8); \n  yield* landingPageTitleTextRef().opacity(0, 0.5); \n  yield* waitFor(2 - (0.8 + (1.2 - 0.8) + 0.5)); \n  // Total time: 7 + 2 = 9s\n\n  // --- Scene 3: Landing Page (9s - 29s) --- (20s duration)\n  view.add(\n    <Video\n      ref={landingPageVideoRef}\n      src={assets.landingPageVideoAsset} \n      width={theme.width * 0.9} \n      height={theme.height * 0.8}\n      opacity={0}\n      zIndex={theme.zIndex.video}\n      radius={theme.unit * 1}\n    />\n  );\n  view.add(\n    <Rect \n      ref={landingPageCaptionTextRef}\n      fill={theme.colors.captionBackground}\n      radius={theme.unit * 0.5}\n      padding={theme.unit}\n      opacity={0}\n      position={[0, theme.height / 2 - theme.unit * 8]} \n      zIndex={theme.zIndex.captionBg}\n      layout \n    >\n      <Txt\n        text=\"Explore Landing Page Examples\"\n        fontSize={theme.font.md}\n        fill={theme.colors.textLight}\n        textAlign=\"center\"\n      />\n    </Rect>\n  );\n\n  (landingPageVideoRef() as any).time(0); \n  yield* waitFor(0.1); \n  landingPageVideoRef().play();\n  yield* all(\n    landingPageVideoRef().opacity(1, 0.5), \n    slideIn(landingPageCaptionTextRef, 0.7, 'bottom', theme) \n  );\n  yield* waitFor(19.5 - Math.max(0.5, 0.7)); \n  yield* all(\n    landingPageVideoRef().opacity(0, 0.5), \n    landingPageCaptionTextRef().opacity(0, 0.5) \n  );\n  landingPageVideoRef().pause();\n  yield* waitFor(20 - (19.5 + 0.5)); \n  // Total time: 9 + 20 = 29s\n\n  // --- Scene 4: Image Gen Section (29s - 31s) ---\n  view.add(\n    <Txt\n      ref={imageGenTitleTextRef}\n      text=\"Image Generation\"\n      fontSize={theme.font.lg}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      zIndex={theme.zIndex.sectionText}\n      textAlign=\"center\"\n      position={[0,0]}\n    />\n  );\n  yield* imageGenTitleTextRef().opacity(1, 0.8); \n  yield* waitFor(1.2 - 0.8); \n  yield* imageGenTitleTextRef().opacity(0, 0.5); \n  yield* waitFor(2 - (0.8 + (1.2 - 0.8) + 0.5)); \n  // Total time: 29 + 2 = 31s\n\n  // --- Scene 5: Image Generation (Combined Parts) (31s - 63s) --- (32s duration)\n  view.add(\n    <Video\n      ref={imageGenVideoRef} \n      src={assets.imageGenVideoAsset} \n      width={theme.width * 0.9}\n      height={theme.height * 0.8}\n      opacity={0}\n      zIndex={theme.zIndex.video}\n      radius={theme.unit * 1}\n    />\n  );\n  view.add(\n    <Rect \n      ref={imageGenCaptionTextRef} \n      fill={theme.colors.captionBackground}\n      radius={theme.unit * 0.5}\n      padding={theme.unit}\n      opacity={0}\n      position={[0, theme.height / 2 - theme.unit * 8]} \n      zIndex={theme.zIndex.captionBg}\n      layout \n    >\n      <Txt \n        text=\"\" \n        fontSize={theme.font.md}\n        fill={theme.colors.textLight}\n        textAlign=\"center\"\n      />\n    </Rect>\n  );\n\n  // Part 1: Navigation (4s)\n  (imageGenVideoRef() as any).time(0); \n  imageGenVideoRef().playbackRate(1);\n  yield* waitFor(0.1); \n  imageGenVideoRef().play();\n  (imageGenCaptionTextRef().childAs<Txt>(0) as Txt).text(\"Selecting Use Case\");\n  yield* all(\n    imageGenVideoRef().opacity(1, 0.5), \n    slideIn(imageGenCaptionTextRef, 0.7, 'bottom', theme) \n  );\n  yield* waitFor(4 - 0.7); \n  yield* imageGenCaptionTextRef().opacity(0, 0.5); \n  // Part 1 ends at 31 + 4 = 35s\n\n  // Part 2: Prompt & Settings (13s)\n  (imageGenVideoRef() as any).time(27); \n  imageGenVideoRef().playbackRate(4.77);\n  yield* waitFor(0.5); \n  (imageGenCaptionTextRef().childAs<Txt>(0) as Txt).text(\"Crafting Your Visual Prompt\");\n  yield* slideIn(imageGenCaptionTextRef, 0.7, 'bottom', theme); \n  yield* waitFor(13 - 0.7); \n  yield* imageGenCaptionTextRef().opacity(0, 0.5); \n  // Part 2 ends at 35 + 13 = 48s\n\n  // Part 3: Output (15s)\n  (imageGenVideoRef() as any).time(213); \n  imageGenVideoRef().playbackRate(1.33);\n  yield* waitFor(0.5); \n  (imageGenCaptionTextRef().childAs<Txt>(0) as Txt).text(\"Stunning Image Generations\");\n  yield* slideIn(imageGenCaptionTextRef, 0.7, 'bottom', theme); \n  yield* waitFor(15 - 0.7); \n  yield* all(\n    imageGenVideoRef().opacity(0, 0.5),\n    imageGenCaptionTextRef().opacity(0, 0.5)\n  );\n  imageGenVideoRef().pause();\n  // Part 3 ends at 48 + 15 = 63s. Total duration 4+13+15 = 32s.\n  // Total time: 31 + 32 = 63s\n\n  // --- Scene 8: Planner Section (63s - 65s) ---\n  view.add(\n    <Txt\n      ref={plannerTitleTextRef}\n      text=\"Content Planner\"\n      fontSize={theme.font.lg}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      zIndex={theme.zIndex.sectionText}\n      textAlign=\"center\"\n      position={[0,0]}\n    />\n  );\n  yield* plannerTitleTextRef().opacity(1, 0.8); \n  yield* waitFor(1.2 - 0.8);\n  yield* plannerTitleTextRef().opacity(0, 0.5); \n  yield* waitFor(2 - (0.8 + (1.2 - 0.8) + 0.5));\n  // Total time: 63 + 2 = 65s\n\n  // --- Scene 9: Content Planner (65s - 90s) --- (25s duration)\n  view.add(\n    <Video\n      ref={plannerVideoRef}\n      src={assets.plannerVideoAsset} \n      width={theme.width * 0.9}\n      height={theme.height * 0.8}\n      opacity={0}\n      zIndex={theme.zIndex.video}\n      radius={theme.unit * 1}\n    />\n  );\n  view.add(\n    <Rect \n      ref={plannerCaptionTextRef}\n      fill={theme.colors.captionBackground}\n      radius={theme.unit * 0.5}\n      padding={theme.unit}\n      opacity={0}\n      position={[0, theme.height / 2 - theme.unit * 8]} \n      zIndex={theme.zIndex.captionBg}\n      layout \n    >\n      <Txt\n        text=\"Intelligent Content Planning\"\n        fontSize={theme.font.md}\n        fill={theme.colors.textLight}\n        textAlign=\"center\"\n      />\n    </Rect>\n  );\n  (plannerVideoRef() as any).time(0); \n  plannerVideoRef().playbackRate(2.52);\n  yield* waitFor(0.1);\n  plannerVideoRef().play();\n  yield* all(\n    plannerVideoRef().opacity(1, 0.5), \n    slideIn(plannerCaptionTextRef, 0.7, 'bottom', theme) \n  );\n  yield* waitFor(24.5 - Math.max(0.5, 0.7)); \n  yield* all(\n    plannerVideoRef().opacity(0, 0.5),\n    plannerCaptionTextRef().opacity(0, 0.5)\n  );\n  plannerVideoRef().pause();\n  yield* waitFor(25 - (24.5 + 0.5));\n  // Total time: 65 + 25 = 90s\n\n  // --- Scene 10: Video Gen Section (90s - 92s) ---\n  view.add(\n    <Txt\n      ref={videoGenTitleTextRef}\n      text=\"AI Video Generation\"\n      fontSize={theme.font.lg}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      zIndex={theme.zIndex.sectionText}\n      textAlign=\"center\"\n      position={[0,0]}\n    />\n  );\n  yield* videoGenTitleTextRef().opacity(1, 0.8); \n  yield* waitFor(1.2 - 0.8);\n  yield* videoGenTitleTextRef().opacity(0, 0.5); \n  yield* waitFor(2 - (0.8 + (1.2 - 0.8) + 0.5));\n  // Total time: 90 + 2 = 92s\n\n  // --- Scene 11: Video Generation (92s - 116s) --- (24s duration)\n  view.add(\n    <Video // This is Asset #5, for the second part\n      ref={videoGenVideoRef}\n      src={assets.videoGenVideoAsset} \n      width={theme.width * 0.9}\n      height={theme.height * 0.8}\n      opacity={0}\n      zIndex={theme.zIndex.video}\n      radius={theme.unit * 1}\n    />\n  );\n  view.add(\n    <Video // This is Asset #3, for the first part\n      ref={revideoDemoRef}\n      src={assets.revideoDemoAsset} \n      width={theme.width * 0.9}\n      height={theme.height * 0.8}\n      opacity={0}\n      zIndex={theme.zIndex.video} \n      radius={theme.unit * 1}\n    />\n  );\n  view.add(\n    <Rect \n      ref={videoGenCaptionTextRef}\n      fill={theme.colors.captionBackground}\n      radius={theme.unit * 0.5}\n      padding={theme.unit}\n      opacity={0}\n      position={[0, theme.height / 2 - theme.unit * 8]} \n      zIndex={theme.zIndex.captionBg}\n      layout \n    >\n      <Txt\n        text=\"\" // Will be set dynamically\n        fontSize={theme.font.md}\n        fill={theme.colors.textLight}\n        textAlign=\"center\"\n      />\n    </Rect>\n  );\n\n  // Part 1: Text Prompt (15s) - uses revideoDemoRef (Asset #3)\n  (revideoDemoRef() as any).time(24); \n  revideoDemoRef().playbackRate(1.73);\n  yield* waitFor(0.1); \n  revideoDemoRef().play();\n  (videoGenCaptionTextRef().childAs<Txt>(0) as Txt).text(\"Text-to-Video Creation\");\n  yield* all(\n    revideoDemoRef().opacity(1, theme.animation.fast), \n    slideIn(videoGenCaptionTextRef, theme.animation.defaultSlide, 'bottom', theme) \n  );\n  // Duration of content play: 15s (total) - 0.7s (max_in_anim) - 0.3s (video_fade_out) = 14s\n  yield* waitFor(15 - Math.max(theme.animation.fast, theme.animation.defaultSlide) - theme.animation.fast); \n  yield* revideoDemoRef().opacity(0, theme.animation.fast); \n  revideoDemoRef().pause();\n  // Part 1 ends at 92 + 15 = 107s\n\n  // Part 2: Fast Iteration/Output (9s) - uses videoGenVideoRef (Asset #5)\n  yield* waitFor(0.5); // Transition time\n  (videoGenVideoRef() as any).time(0); \n  yield* waitFor(0.1); \n  videoGenVideoRef().play();\n  (videoGenCaptionTextRef().childAs<Txt>(0) as Txt).text(\"Rapid Video Iteration\");\n  yield* all(\n      videoGenVideoRef().opacity(1, theme.animation.fast),\n      slideIn(videoGenCaptionTextRef, theme.animation.defaultSlide, 'bottom', theme)\n  );\n  // Duration of content play: 9s (total) - 0.5s (transition) - 0.7s (max_in_anim) - 0.5s (fade_out) = 7.3s\n  yield* waitFor(9 - Math.max(theme.animation.fast, theme.animation.defaultSlide) - theme.animation.defaultFade - 0.5); \n  yield* all(\n    videoGenVideoRef().opacity(0, theme.animation.defaultFade), \n    videoGenCaptionTextRef().opacity(0, theme.animation.defaultFade) \n  );\n  videoGenVideoRef().pause();\n  // Part 2 ends at 107 + 9 = 116s\n  \n  yield* waitFor(24 - (15 + 9)); // Should be waitFor(0)\n  // Total time: 92 + 24 = 116s\n\n  // Fade out background before outro\n  yield* blurredLogoBgRef().opacity(0, theme.animation.medium);\n\n  // --- Scene 12: Outro (116s - 121s) --- (5s duration)\n  view.add(\n    <Img\n      ref={logoOutroRef}\n      src={assets.logoAsset} \n      width={theme.unit * 25}\n      opacity={0}\n      zIndex={theme.zIndex.logo}\n      position={[0, -theme.unit * 5]}\n    />\n  );\n  view.add(\n    <Txt\n      ref={textOutroRef}\n      text=\"mixio.pro\"\n      fontSize={theme.font.xl}\n      fontWeight={700}\n      fill={theme.colors.textLight}\n      opacity={0}\n      scale={0.5}\n      zIndex={theme.zIndex.contentDefault}\n      position={[0, theme.unit * 10]}\n      textAlign=\"center\"\n    />\n  );\n  \n  yield* blurredLogoBgRef().opacity(1, 1); \n\n  yield* all(\n    logoOutroRef().opacity(1, 1), \n    textOutroRef().opacity(1, 1.2), \n    textOutroRef().scale(1, 1.2, easeOutExpo) \n  );\n  yield* waitFor(4.5 - 1.2); \n\n  yield* all(\n    blurredLogoBgRef().opacity(0, theme.animation.medium), \n    logoOutroRef().opacity(0, theme.animation.medium), \n    textOutroRef().opacity(0, theme.animation.medium) \n  );\n  \n  backgroundMusicRef().pause();\n  yield* waitFor(0.1); \n  // Total time: 116 + 5 = 121s\n});"
}